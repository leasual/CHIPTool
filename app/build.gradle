apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: "androidx.navigation.safeargs"

def keystorePropertiesFile = rootProject.file("gradle.properties")
// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()
// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    buildFeatures {
        viewBinding true
        compose true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    defaultConfig {
        applicationId "com.se.chip.chiptool1"
        minSdkVersion 24
        targetSdkVersion 31
        versionCode 2
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // NOTE: This build assumes CHIP was configured and built for armeabi-v7a. Deal with
        // other archs later when build is sane.
        //  ndk {abiFilters 'armeabi-v7a'}

        externalNativeBuild {
            cmake {
                targets "default"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    composeOptions {
        kotlinCompilerVersion "1.5.21"
        kotlinCompilerExtensionVersion "1.0.2"
    }


    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == "androidx") {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "${targetSdk}.+"
                }
            }
        }
    }

    if (matterSdkSourceBuild.toBoolean() && !matterBuildSrcDir.isEmpty()) {
        externalNativeBuild {
            cmake {
                path file(matterBuildSrcDir + '/CMakeLists.txt')
                version '3.10.2'
            }
        }
    } else {
        sourceSets {
            main {
                jniLibs.srcDirs = ['libs/jniLibs']
            }
        }
    }
    lintOptions {
        abortOnError false
    }
}

//tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
//    kotlinOptions {
//        jvmTarget = "11"
//        freeCompilerArgs += [
//                "-Xallow-jvm-ir-dependencies",
////                "-Xskip-prerelease-check"
////                "-P",
////                "plugin:androidx.compose.compiler.plugins.kotlin:suppressKotlinVersionCompatibilityCheck=true"
//        ]
//    }
//}

dependencies {
    implementation 'com.google.android.material:material:1.4.0'
    def room_version = "2.2.5"

    implementation "androidx.room:room-runtime:2.3.0"
    kapt "androidx.room:room-compiler:2.3.0"

    if (matterSdkSourceBuild.toBoolean() && !matterBuildSrcDir.isEmpty()) {
        implementation project(':chip-library')
    } else {
        // local in-source-tree copy of the dependencies. Useful for IDE compilation
        implementation fileTree(dir: "libs", include: ["*.jar", "*.so"])
    }

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.fragment:fragment-ktx:1.4.0-beta01'
    implementation "androidx.annotation:annotation:1.2.0"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation "androidx.activity:activity-compose:1.3.1"
    implementation "androidx.work:work-runtime:2.7.0"
    implementation "androidx.core:core-ktx:1.7.0"
    implementation 'androidx.navigation:navigation-compose:2.4.0-beta01'
    implementation 'androidx.core:core-splashscreen:1.0.0-alpha02'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.google.android.gms:play-services-vision:20.1.3"
    implementation 'com.google.code.gson:gson:2.8.7'

    implementation 'com.google.android.material:material:1.4.0'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"

//    implementation "android.arch.lifecycle:viewmodel:2.2.0"
//    kapt "android.arch.lifecycle:compiler:2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.0"
    implementation "com.google.android.gms:play-services-mlkit-barcode-scanning:16.2.1"
    //zxing
    implementation 'com.journeyapps:zxing-android-embedded:4.2.0'
    implementation 'com.jjoe64:graphview:4.2.2'
    //lottie
    implementation "com.airbnb.android:lottie:3.4.0"

    //vertical seekbar
    implementation 'com.github.lukelorusso:VerticalSeekBar:1.2.7'
    //mdns
    implementation 'com.github.andriydruk:rx2dnssd:0.9.15'
    //switch
    implementation 'com.kyleduo.switchbutton:library:2.1.0'

    //compose
    implementation "androidx.compose.compiler:compiler:1.0.2"
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.foundation:foundation-layout:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.animation:animation:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0-rc01"
    implementation "com.google.android.material:compose-theme-adapter:$compose_version"

    implementation "com.google.accompanist:accompanist-swiperefresh:$accompanist_version"
    implementation "com.google.accompanist:accompanist-insets:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"


    //hilt
    implementation "com.google.dagger:hilt-android:2.35"
    kapt "com.google.dagger:hilt-android-compiler:2.35"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0-alpha03"
    // When using Kotlin.
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
}
repositories {
    mavenCentral()
}
